{"version":3,"file":"js/menu06.9afb5850.js","mappings":"oeA2BA,MAAMA,GAAQC,EAAAA,EAAAA,MAEd,SAASC,IACP,OAAOF,EAAMG,MAAMC,OAIrB,MAAMC,GAAiBC,EAAAA,EAAAA,KAAS,IACvBN,EAAMG,MAAMC,SAIfA,GAASG,EAAAA,EAAAA,IAAI,IAEnB,SAASC,IACPR,EAAMS,OAAO,YAAaL,EAAOM,OAGnC,SAASC,IACPX,EAAMY,SAAS,mBAAoB,CAACR,OAAOA,EAAOM,MAAOG,SAAS,M,+6BC3CpE,MAAMC,EAAc,EAEpB,S,iZCuBA,MAAMd,GAAQC,EAAAA,EAAAA,MAEd,SAASc,IACP,OAAOf,EAAMG,MAAMa,QAAQC,MAI7B,MAAMC,GAAgBZ,EAAAA,EAAAA,KAAS,IACtBN,EAAMG,MAAMa,QAAQC,QAIvBP,GAAQH,EAAAA,EAAAA,IAAI,GAElB,SAASY,IACPnB,EAAMS,OAAO,mBAAoBC,EAAMA,OAGzC,SAASU,IACPpB,EAAMY,SAAS,0BAA2B,CAACF,MAAMA,EAAMA,MAAOG,SAAU,M,4hCC5C1E,MAAMC,EAAc,EAEpB","sources":["webpack://front-end-vue/./src/views/menu06/Exam01RootState.vue","webpack://front-end-vue/./src/views/menu06/Exam01RootState.vue?67d7","webpack://front-end-vue/./src/views/menu06/Exam02CounterState.vue","webpack://front-end-vue/./src/views/menu06/Exam02CounterState.vue?779f"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Exam01RootState</div>\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <h6>[Root State 읽기]</h6>\r\n        <p>userId 단방향 바인딩: {{ $store.state.userId }}</p>\r\n        <p>userId 단방향 바인딩: {{ store.state.userId }}</p>\r\n        <p>userId 단방향 바인딩: {{ store.getters.getUserId }}</p>\r\n        <p>userId 단방향 바인딩: {{ getUserId() }}</p>\r\n        <p>userId 단방향 바인딩: {{ computedUserId }}</p>\r\n        <p>userId 양방향 바인딩: <input type=\"text\" v-model=\"$store.state.userId\"></p>\r\n      </div>\r\n      <h6>[Root State 변경]</h6>\r\n      <p>userId 변경값 입력: <input type=\"text\" v-model=\"userId\"></p>\r\n      <div>\r\n        <button @click=\"changeUserIdMyMutation\" class=\"btn btn-secondary btn-sm mr-2\">userId 변경(Mutation 동기 방식)</button>\r\n        <button @click=\"changeUserIdMyAction\" class=\"btn btn-secondary btn-sm\">userId 변경(Action 비동기 방식)</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from \"vuex\";\r\nimport { computed, ref } from \"vue\";\r\n\r\nconst store = useStore();\r\n\r\nfunction getUserId() {\r\n  return store.state.userId;\r\n  //return store.getters.getUserId;\r\n}\r\n\r\nconst computedUserId = computed(()=>{\r\n  return store.state.userId;\r\n  //return store.getters.getUserId;\r\n});\r\n\r\nconst userId = ref(\"\");\r\n\r\nfunction changeUserIdMyMutation() {\r\n  store.commit(\"setUserId\", userId.value);\r\n}\r\n\r\nfunction changeUserIdMyAction() {\r\n  store.dispatch(\"setUserIdByAsync\", {userId:userId.value, duration:3000})\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam01RootState.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01RootState.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      Exam02CounterState\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <h6>[Counter State 읽기]</h6>\r\n        <p>counter/count 단방향 바인딩: {{ $store.state.counter.count }}</p>\r\n        <p>counter/count 단방향 바인딩: {{ store.state.counter.count }}</p>\r\n        <p>counter/count 단방향 바인딩: {{ store.getters[\"counter/getCount\"] }}</p>\r\n        <p>counter/count 단방향 바인딩: {{ getCount() }}</p>\r\n        <p>counter/count 단방향 바인딩: {{ computedCount }}</p>\r\n        <p>counter/count 양방향 바인딩: <input type=\"text\" v-model.number=\"$store.state.counter.count\"></p>\r\n      </div>\r\n      <h6>[Counter State 변경]</h6>\r\n      <p>count 증가값 입력: <input type=\"text\" v-model.number=\"value\"></p>\r\n      <div>\r\n        <button @click=\"changeCountMyMutation\" class=\"btn btn-secondary btn-sm mr-2\">count 변경(Mutation 동기 방식)</button>\r\n        <button @click=\"changeCountMyAction\" class=\"btn btn-secondary btn-sm\">count 변경(Action 비동기 방식)</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from 'vuex';\r\nimport { computed, ref } from 'vue';\r\nconst store = useStore();\r\n\r\nfunction getCount () {\r\n  return store.state.counter.count;\r\n  //return store.getters[\"counter/getCount\"];\r\n}\r\n\r\nconst computedCount = computed(() => {\r\n  return store.state.counter.count;\r\n  //return store.getters[\"counter/getCount\"];\r\n});\r\n\r\nconst value = ref(1);\r\n\r\nfunction changeCountMyMutation () {\r\n  store.commit(\"counter/setCount\", value.value);\r\n}\r\n\r\nfunction changeCountMyAction () {\r\n  store.dispatch(\"counter/setCountByAsync\", {value:value.value, duration: 3000});\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./Exam02CounterState.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam02CounterState.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["store","useStore","getUserId","state","userId","computedUserId","computed","ref","changeUserIdMyMutation","commit","value","changeUserIdMyAction","dispatch","duration","__exports__","getCount","counter","count","computedCount","changeCountMyMutation","changeCountMyAction"],"sourceRoot":""}