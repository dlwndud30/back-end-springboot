{"version":3,"file":"js/menu07.312a8091.js","mappings":"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","sources":["webpack://front-end-vue/./node_modules/js-file-download/file-download.js","webpack://front-end-vue/./src/apis/board.js","webpack://front-end-vue/./src/components/menu02/ModalDialogTemplate.vue","webpack://front-end-vue/./src/components/menu02/ModalDialogTemplate.vue?55f4","webpack://front-end-vue/./src/components/menu07/AlertDialog.vue","webpack://front-end-vue/./src/views/menu07/Exam01AsyncControl.vue","webpack://front-end-vue/./src/views/menu07/Exam01AsyncControl.vue?f41b","webpack://front-end-vue/./src/views/menu07/auth/Join.vue","webpack://front-end-vue/./src/views/menu07/auth/Join.vue?8402","webpack://front-end-vue/./src/views/menu07/auth/Login.vue","webpack://front-end-vue/./src/views/menu07/auth/Login.vue?70bd","webpack://front-end-vue/./src/views/menu07/board/List.vue","webpack://front-end-vue/./src/views/menu07/board/List.vue?5f9a","webpack://front-end-vue/./src/views/menu07/board/Read.vue","webpack://front-end-vue/./src/views/menu07/board/Read.vue?a213","webpack://front-end-vue/./src/views/menu07/board/UpdateForm.vue","webpack://front-end-vue/./src/views/menu07/board/UpdateForm.vue?f0df","webpack://front-end-vue/./src/views/menu07/board/WriteForm.vue","webpack://front-end-vue/./src/views/menu07/board/WriteForm.vue?b13f"],"sourcesContent":["module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","//rest board api와 통신하는 모듈 -> 기능/Controller 별로 하나씩 만드는게 좋음\r\nimport axios from \"axios\";\r\nimport apiAuth from \"@/apis/auth\";\r\n\r\n//게시물 목록 요청\r\n//비동기\r\nasync function getBoardList(pageNo = 1) {\r\n  //pageNo = 1 : pageNo가 넘어오지 않으면 default 값을 1을 주겠다.\r\n  let response = null;\r\n  console.log(\"getBoardList() 실행\");\r\n  try {\r\n    response = await axios.get(\"/board/list\", { params: { pageNo: pageNo } }); // axios.get() : get방식으로 요청 -> url : http://localhost/board/list  //{ params: { pageNo: pageNo } }: queryString 방식으로 넘겨줌\r\n    console.log(response);\r\n    return { result: \"success\", data: response.data };\r\n  } catch (error) {\r\n    console.log(error);\r\n    if (error.response) {\r\n      //서버 응답이 있다\r\n      if (error.response.status === 403) {\r\n        console.log(\"ddd\");\r\n\r\n        //accessToken을 보냈지만 만료된 경우\r\n        if (await apiAuth.refreshToken()) {\r\n          //accessToken 재발급 성공한 경우\r\n          //board/list 재요청\r\n          console.log(\"--------------------------\");\r\n          response = await axios.get(\"/board/list\", { params: { pageNo: pageNo } }); // axios.get() : get방식으로 요청 -> url : http://localhost/board/list  //{ params: { pageNo: pageNo } }: queryString 방식으로 넘겨줌\r\n          return { result: \"success\", data: response.data };\r\n        }\r\n      }\r\n    } else {\r\n      //서버 응답이 없다 -> 네트워크 오류\r\n      return { result: \"fail-network\" };\r\n    }\r\n  }\r\n}\r\n\r\n//게시물 쓰기(멀티 파트로 구성해서 전달)\r\nasync function createBoard(multipartFormData) {\r\n  let dbBoard = null;\r\n  try {\r\n    const response = await axios.post(\"/board/\", multipartFormData);\r\n    dbBoard = response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      //서버 응답이 있다\r\n      if (error.response.state === 403) {\r\n        //accessToken을 보냈지만 만료된 경우\r\n        if (await apiAuth.refreshToken()) {\r\n          //accessToken 재발급 성공한 경우\r\n          console.log(\"--------------------------\");\r\n          const response = await axios.post(\"/board/\", multipartFormData);\r\n          dbBoard = response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return dbBoard;\r\n}\r\n\r\n//게시물 읽기\r\nasync function readBoard(bno, hit) {\r\n  let board = null;\r\n\r\n  try {\r\n    const response = await axios.get(`/board/${bno}?hit=${hit}`);\r\n    board = response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      //서버 응답이 있다\r\n      if (error.response.state === 403) {\r\n        //accessToken을 보냈지만 만료된 경우\r\n        if (await apiAuth.refreshToken()) {\r\n          //accessToken 재발급 성공한 경우\r\n          console.log(\"--------------------------\");\r\n          const response = await axios.get(`/board/${bno}?hit=${hit}`);\r\n          board = response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return board;\r\n}\r\n\r\n//파일 다운로드\r\nasync function downloadBoardAttach(bno) {\r\n  let blob = null;\r\n\r\n  try {\r\n    const response = await axios.get(`/board/battach/${bno}`, { responseType: \"blob\" });\r\n    blob = response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      //서버 응답이 있다\r\n      if (error.response.state === 403) {\r\n        //accessToken을 보냈지만 만료된 경우\r\n        if (await apiAuth.refreshToken()) {\r\n          //accessToken 재발급 성공한 경우\r\n          console.log(\"--------------------------\");\r\n          const response = await axios.get(`/board/battach/${bno}`, { responseType: \"blob\" });\r\n          blob = response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return blob;\r\n}\r\n\r\n//게시물 삭제\r\nasync function deleteBoard(bno) {\r\n  let result = null;\r\n  try {\r\n    const response = await axios.delete(`/board/${bno}`);\r\n    //result = \"success\";\r\n    result = response.data.result;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      //서버 응답이 있다\r\n      if (error.response.state === 403) {\r\n        //accessToken을 보냈지만 만료된 경우\r\n        if (await apiAuth.refreshToken()) {\r\n          //accessToken 재발급 성공한 경우\r\n          console.log(\"--------------------------\");\r\n          const response = await axios.delete(`/board/${bno}`);\r\n          //result = \"success\";\r\n          result = response.data.result;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n//게시물 수정\r\nasync function updateBoard(multipartFormData) {\r\n  let dbBoard = null;\r\n\r\n  try {\r\n    const response = await axios.put(`/board/`, multipartFormData);\r\n    dbBoard = response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      //서버 응답이 있다\r\n      if (error.response.state === 403) {\r\n        //accessToken을 보냈지만 만료된 경우\r\n        if (await apiAuth.refreshToken()) {\r\n          //accessToken 재발급 성공한 경우\r\n          console.log(\"--------------------------\");\r\n          const response = await axios.put(`/board/`, multipartFormData);\r\n          dbBoard = response.data;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return dbBoard;\r\n}\r\n\r\n//내보내기 : 바깥쪽에서 import해서 쓸 수 있도록\r\nexport default {\r\n  getBoardList: getBoardList,\r\n  createBoard,\r\n  readBoard,\r\n  downloadBoardAttach,\r\n  deleteBoard,\r\n  updateBoard,\r\n};\r\n","<template>\r\n  <Transition name=\"modal\">\r\n    <div class=\"modal-mask\">\r\n      <div class=\"modal-wrapper\">\r\n        <div class=\"modal-container\" :style=\"$attrs.style\">\r\n          <div class=\"modal-header\">\r\n            <!--slot-->\r\n            <slot name=\"header\">default header</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-body\">\r\n            <!--slot-->\r\n            <slot name=\"body\">default body</slot>\r\n          </div>\r\n\r\n          <div class=\"modal-footer\">\r\n            <!--slot-->\r\n            <slot name=\"footer\">\r\n              default footer\r\n              <button class=\"modal-default-button\" @click=\"$emit('close')\">OK</button>\r\n            </slot>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </Transition>\r\n</template>\r\n\r\n<script>\r\n//options API 방식\r\nexport default {\r\n  inheritAttrs: false,\r\n};\r\n</script>\r\n\r\n<script setup></script>\r\n\r\n<style scoped>\r\n.modal-mask {\r\n  position: fixed;\r\n  z-index: 9998;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: table;\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.modal-wrapper {\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n}\r\n\r\n.modal-container {\r\n  width: 300px;\r\n  margin: 0px auto;\r\n  padding: 20px 30px;\r\n  background-color: #fff;\r\n  border-radius: 2px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.modal-header h3 {\r\n  margin-top: 0;\r\n  color: #929292;\r\n}\r\n\r\n.modal-body {\r\n  margin: 20px 0;\r\n}\r\n\r\n.modal-default-button {\r\n  float: right;\r\n}\r\n\r\n/*\r\n * The following styles are auto-applied to elements with\r\n * transition=\"modal\" when their visibility is toggled\r\n * by Vue.js.\r\n *\r\n * You can easily play with the modal transition by editing\r\n * these styles.\r\n */\r\n\r\n.modal-enter-from {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n.modal-enter-from .modal-container,\r\n.modal-leave-to .modal-container {\r\n  -webkit-transform: scale(1.1);\r\n  transform: scale(1.1);\r\n}\r\n</style>\r\n","import { render } from \"./ModalDialogTemplate.vue?vue&type=template&id=23c50fca&scoped=true\"\nimport script from \"./ModalDialogTemplate.vue?vue&type=script&lang=js\"\nexport * from \"./ModalDialogTemplate.vue?vue&type=script&lang=js\"\n\nimport \"./ModalDialogTemplate.vue?vue&type=style&index=0&id=23c50fca&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\osstem\\\\projects\\\\node-workspace\\\\front-end-vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-23c50fca\"]])\n\nexport default __exports__","import script from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AlertDialog.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Exam01AsyncControl</div>\r\n    <div class=\"card-body\">\r\n      <div>\r\n        <button @click=\"handleBtn1\" class=\"btn btn-secondary btn-sm mr-2\">비동기 작업1</button>\r\n        <button @click=\"handleBtn2\" class=\"btn btn-secondary btn-sm mr-2\">비동기 작업2</button>\r\n      </div>\r\n\r\n      <div v-if=\"!loading\" class=\"mt-3\">\r\n        <div>result: {{ result }}</div>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"spinner-border text-secondary mt-3\" role=\"status\">\r\n        <span class=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\n\r\nconst result = ref(\"\");\r\nconst loading = ref(false); //상태를 알 수 있는 변수\r\n\r\nfunction handleBtn1() {\r\n  loading.value = true;\r\n  work()\r\n    .then((data) => {\r\n      result.value = data;\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    })\r\n    .finally(() => {\r\n      loading.value = false;\r\n    });\r\n}\r\n\r\nasync function handleBtn2() {\r\n  try {\r\n    loading.value = true;\r\n    const data = await work();\r\n    result.value = data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n}\r\n\r\nfunction work() {\r\n  const promise = new Promise((resolve, reject) => {\r\n    //3초가 지난 후 ()=>{} 실행\r\n    setTimeout(() => {\r\n      resolve(\"value\");\r\n    }, 3000);\r\n  });\r\n\r\n  return promise; // Promise 생성하고 Promise 자체를 리턴 -> Promise를 실행하는게 아님\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Exam01AsyncControl.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Join</div>\r\n    <div class=\"card-body\">\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\">User ID</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.id\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"form-label\">User Name</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.name\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Password</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.password\" />\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Role</label>\r\n        <select class=\"form-control\" name=\"mrole\" v-model=\"user.role\">\r\n          <option value=\"ROLE_ADMIN\">ROLE_ADMIN</option>\r\n          <option value=\"ROLE_MANAGER\">ROLE_MANAGER</option>\r\n          <option value=\"ROLE_USER\" selected>ROLE_USER</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label class=\"col-form-label\">User Email</label>\r\n        <input type=\"text\" class=\"form-control\" v-model=\"user.email\" />\r\n      </div>\r\n      <button class=\"btn btn-info btn-sm\" v-on:click=\"handleJoin\">가입</button>\r\n    </div>\r\n    <AlertDialog v-if=\"alertDialog\" :message=\"alertDialogMessage\" :loading=\"loading\" @close=\"alertDialog = false\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport apiAuth from \"@/apis/auth\";\r\nimport AlertDialog from \"@/components/menu07/AlertDialog.vue\";\r\n\r\nconst alertDialog = ref(false); //AlertDialog가 보일지 여부\r\nconst alertDialogMessage = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nconst user = reactive({\r\n  id: \"user\",\r\n  name: \"사용자\",\r\n  password: \"12345\",\r\n  role: \"ROLE_USER\",\r\n  email: \"user@mycompany.com\",\r\n});\r\n\r\nasync function handleJoin() {\r\n  alertDialog.value = true;\r\n  loading.value = true;\r\n\r\n  const result = await apiAuth.join(user);\r\n  if (result === \"success\") {\r\n    console.log(result);\r\n    alertDialogMessage.value = \"회원가입 성공\";\r\n  } else if (result === \"duplicated\") {\r\n    console.log(result);\r\n    alertDialogMessage.value = \"회원가입 실패: 아이디 중복\";\r\n  } else if (result === \"fail\") {\r\n    console.log(result);\r\n    alertDialogMessage.value = \"회원가입 실패: 서버측 요류\";\r\n  } else {\r\n    console.log(result);\r\n    alertDialogMessage.value = \"회원가입 실패: 네트워크 오류\";\r\n  }\r\n\r\n  loading.value = false;\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Join.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Join.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">로그인</div>\r\n    <div class=\"card-body\">\r\n      <div v-if=\"$store.state.userId === ''\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">User ID</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"userId\" v-model=\"user.id\" />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"userPassword\" class=\"col-form-label\">User Password</label>\r\n          <input type=\"text\" class=\"form-control\" v-model=\"user.password\" />\r\n        </div>\r\n        <button class=\"btn btn-info btn-sm\" v-on:click=\"handleLogin\">로그인</button>\r\n      </div>\r\n      <div v-if=\"store.state.userId !== ''\">\r\n        <button class=\"btn btn-info btn-sm mr-2\" v-on:click=\"handleLogout\">로그아웃</button>\r\n      </div>\r\n    </div>\r\n    <AlertDialog v-if=\"alertDialog\" :message=\"alertDialogMessage\" :loading=\"loading\" @close=\"alertDialog = false\"></AlertDialog>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport apiAuth from \"@/apis/auth\";\r\nimport AlertDialog from \"@/components/menu07/AlertDialog.vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\n\r\nconst user = reactive({\r\n  id: \"user\",\r\n  password: \"12345\",\r\n});\r\n\r\nconst alertDialog = ref(false);\r\nconst alertDialogMessage = ref(\"\");\r\nconst loading = ref(false);\r\n\r\nasync function handleLogin() {\r\n  loading.value = true;\r\n  alertDialog.value = true;\r\n\r\n  const result = await apiAuth.login(user);\r\n  if (result === \"success\") {\r\n    alertDialog.value = false;\r\n    //router.push(\"/\");  //로그아웃 성공 시 페이지 이동\r\n  } else if (result === \"fail-401\") {\r\n    alertDialogMessage.value = \"로그인 실패: 아이디 또는 패스워드가 틀림\";\r\n  } else {\r\n    alertDialogMessage.value = \"로그인 실패: 네트워크 에러\";\r\n  }\r\n  loading.value = false;\r\n}\r\n\r\nasync function handleLogout() {\r\n  await apiAuth.logout();\r\n  \r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Login.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Login.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">List</div>\r\n    <div class=\"card-body\">\r\n      <div v-if=\"page != null\">\r\n        <div class=\"mb-3\">\r\n          <router-link to=\"/menu07/board/writeform\" class=\"btn btn-secondary btn-sm\">생성</router-link>\r\n        </div>\r\n\r\n        <table class=\"table table-sm table-striped table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th class=\"text-center\" style=\"width: 70px\">번호</th>\r\n              <th class=\"text-center\">제목</th>\r\n              <th class=\"text-center\" style=\"width: 90px\">글쓴이</th>\r\n              <th class=\"text-center\" style=\"width: 120px\">날짜</th>\r\n              <th class=\"text-center\" style=\"width: 70px\">조회수</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"board in page.boards\" :key=\"board.bno\">\r\n              <td class=\"text-center\">{{ board.bno }}</td>\r\n              <td>\r\n                <router-link :to=\"`/menu07/board/read?bno=${board.bno}&pageNo=${page.pager.pageNo}&hit=true`\">{{ board.btitle }}</router-link>\r\n              </td>\r\n              <td class=\"text-center\">{{ board.mid }}</td>\r\n              <td class=\"text-center\">{{ new Date(board.bdate).toLocaleDateString() }}</td>\r\n              <td class=\"text-center\">{{ board.bhitcount }}</td>\r\n            </tr>\r\n            <tr>\r\n              <td colspan=\"5\" class=\"text-center\">\r\n                <button @click=\"changePageNo(1)\" class=\"btn btn-outline-dark btn-sm mr-1\">처음</button>\r\n                <button v-if=\"page.pager.groupNo > 1\" @click=\"changePageNo(page.pager.startPageNo - 1)\" class=\"btn btn-outline-secondary btn-sm mr-1\">\r\n                  이전\r\n                </button>\r\n                <!--<button v-for=\"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\" :key=\"pageNo\" @click=\"changePageNo(pageNo)\" class=\"btn btn-sm mr-1\" :class=\"{'btn-outline-secondary':(page.pager.pageNo!=pageNo), 'btn-secondary':(page.pager.pageNo==pageNo)}\">{{pageNo}}</button>-->\r\n                <button\r\n                  v-for=\"pageNo in range(page.pager.startPageNo, page.pager.endPageNo)\"\r\n                  :key=\"pageNo\"\r\n                  @click=\"changePageNo(pageNo)\"\r\n                  class=\"btn btn-sm mr-1\"\r\n                  :class=\"[page.pager.pageNo == pageNo ? 'btn-secondary' : 'btn-outline-secondary']\"\r\n                >\r\n                  {{ pageNo }}\r\n                </button>\r\n                <button\r\n                  v-if=\"page.pager.groupNo < page.pager.totalGroupNo\"\r\n                  @click=\"changePageNo(page.pager.endPageNo + 1)\"\r\n                  class=\"btn btn-outline-secondary btn-sm mr-1\"\r\n                >\r\n                  다음\r\n                </button>\r\n                <button @click=\"changePageNo(page.pager.totalPageNo)\" class=\"btn btn-outline-dark btn-sm mr-1\">맨끝</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n//import {getBoardList} from \"@/apis/board\"; //구조분해해서 가져오기\r\nimport apiBoard from \"@/apis/board\"; //객체로 가져오기\r\n\r\nimport { ref, watch } from \"vue\";\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { useStore } from \"vuex\";\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\nconst store = useStore();\r\n\r\nif (store.state.userId === \"\") {\r\n  router.push(\"/menu07/auth/login\");\r\n}\r\n\r\n//반응형 속성 선언\r\nconst page = ref(null);\r\n\r\n//라우팅시에 전달된 Query String에서 pageNo를 읽기\r\nlet pageNo = route.query.pageNo; //route를 통해서 url로 전달된 pageNo\r\nif (pageNo === \"undefined\") {\r\n  //pageNo가 아예 정의되지 않은 경우 -> null 쓰면 안돼\r\n  pageNo = 1;\r\n}\r\n\r\n//Rest API와 통신해서 페이지에 대한 정보(게시물 목록+페이저)를 page 속성에 저장\r\n//page라는 반응형 속성에 저장하는 이유는 template에 바인딩하기 위해서임 (바인딩하려면 반응형 속성으로 되어 있어야 한다)\r\nasync function getBoardList(pageNo) {\r\n  const result = await apiBoard.getBoardList(pageNo);\r\n\r\n  console.log(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");\r\n  console.log(result);\r\n  if (result.result === \"success\") {\r\n    page.value = result.data;\r\n  } else {\r\n    router.push(\"/menu07/auth/login\");\r\n  }\r\n}\r\ngetBoardList(pageNo);\r\n\r\nfunction range(start, end) {\r\n  const numbers = [];\r\n  for (var i = start; i <= end; i++) {\r\n    numbers.push(i);\r\n  }\r\n  return numbers;\r\n}\r\n\r\nfunction changePageNo(pageNo) {\r\n  router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n}\r\n\r\nwatch(route, (newUrl, oldUrl) => {\r\n  //console.log(\"route\");\r\n  //console.log(route);\r\n  if (newUrl.path === \"/menu07/board/list\") {\r\n    if (newUrl.query.pageNo) {\r\n      //pageNo가 존재하면\r\n      getBoardList(newUrl.query.pageNo);\r\n    } else {\r\n      //pageNo가 존재하지 않으면 무조건 1\r\n      getBoardList(1);\r\n    }\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./List.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./List.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">Read</div>\r\n    <div class=\"card-body\">\r\n      <div v-if=\"board != null\">\r\n        <div class=\"d-flex\">\r\n          <div>\r\n            <p>bno: {{ board.bno }}</p>\r\n            <p>btitle: {{ board.btitle }}</p>\r\n            <p>bcontent: {{ board.bcontent }}</p>\r\n            <p>mid: {{ board.mid }}</p>\r\n            <p>bdate: {{ new Date(board.bdate).toLocaleDateString() }}</p>\r\n            <p>bhitcount: {{ board.bhitcount }}</p>\r\n            <p v-if=\"board.battachoname\">\r\n              battachoname: {{ board.battachoname }}\r\n              <button @click=\"downloadBattach\" class=\"btn btn-secondary btn-sm ml-2\">다운로드</button>\r\n            </p>\r\n          </div>\r\n          <div class=\"ml-5\">\r\n            <img v-if=\"board.battachoname\" :src=\"battach\" width=\"300\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <router-link :to=\"`/menu07/board/list?pageNo=${pageNo}`\" class=\"btn btn-info btn-sm mr-2\">목록</router-link>\r\n          <router-link :to=\"`/menu07/board/updateform?bno=${$route.query.bno}&pageNo=${$route.query.pageNo}`\" class=\"btn btn-info btn-sm mr-2\">수정</router-link>\r\n          <button class=\"btn btn-info btn-sm mr-2\" @click=\"handleRemove\">삭제</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { useRoute, useRouter } from \"vue-router\";\r\nimport { ref, reactive } from \"vue\";\r\nimport apiBoard from \"@/apis/board\";\r\n\r\nimport fileDownload from \"js-file-download\";\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\nconst bno = route.query.bno;\r\nconst pageNo = route.query.pageNo;\r\nconst hit = route.query.hit;\r\n\r\nconst board = ref(null);\r\n\r\nconst battach = ref(null);\r\n\r\nasync function getBoard() {\r\n  apiBoard.readBoard(bno, hit).then((data) => {\r\n    board.value = data;\r\n  });\r\n\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if (blob != null) {\r\n    battach.value = URL.createObjectURL(blob);\r\n  }\r\n}\r\ngetBoard();\r\n\r\nasync function downloadBattach() {\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if (blob != null) {\r\n    fileDownload(blob, board.value.battachoname); // blob: 받은 파일 , board.value.battachoname: 저장할 파일 이름\r\n  }\r\n}\r\n\r\nasync function handleRemove() {\r\n  const result = await apiBoard.deleteBoard(bno);\r\n  if(result === \"success\"){\r\n    router.push(`/menu07/board/list?pageNo=${pageNo}`);\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Read.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Read.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">UpdateForm</div>\r\n    <div class=\"card-body\">\r\n      <form v-if=\"board\" v-on:submit.prevent=\"handleUpdate\">\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">제목</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">내용</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n          <div class=\"col-sm-10\">\r\n            <input @change=\"previewImg\" type=\"file\" class=\"form-control-file\" ref=\"newBattach\" />\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 현재 첨부된 사진을 보여주는 -->\r\n        <div>\r\n          <img :src=\"battach\" width=\"200\">\r\n        </div>\r\n\r\n        <!-- 버튼 -->\r\n        <div class=\"form-group row mt-3\">\r\n          <div class=\"col-sm-12 d-flex justify-content-center\">\r\n            <input type=\"submit\" class=\"btn btn-secondary btn-sm mr-2\" value=\"수정\" />\r\n            <input type=\"button\" class=\"btn btn-secondary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { reactive, ref } from \"vue\";\r\nimport { useRouter, useRoute } from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\n\r\nconst route = useRoute();\r\nconst router = useRouter();\r\n\r\nconst board = ref(null);\r\nconst bno = route.query.bno;\r\nconst pageNo = route.query.pageNo;\r\n\r\nconst newBattach = ref(null);\r\nconst battach = ref(null);\r\n\r\n\r\nasync function getBoard() {\r\n  const dbBoard = await apiBoard.readBoard(bno, false);\r\n  board.value = dbBoard;\r\n\r\n  const blob = await apiBoard.downloadBoardAttach(bno);\r\n  if(blob != null){\r\n    battach.value = URL.createObjectURL(blob);\r\n  }\r\n}\r\ngetBoard();\r\n\r\nasync function handleUpdate() {\r\n  const multipartFormData = new FormData();\r\n  multipartFormData.append(\"btitle\" , board.value.btitle);\r\n  multipartFormData.append(\"bcontent\" , board.value.bcontent);\r\n  multipartFormData.append(\"bno\" , board.value.bno);\r\n\r\n  //첨부 파일이 있다면 \r\n  if(newBattach.value.files.length != 0) {\r\n    multipartFormData.append(\"battach\", newBattach.value.files[0]);\r\n  }\r\n  \r\n  await apiBoard.updateBoard(multipartFormData);  //null 또는\r\n  router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`);\r\n}\r\n\r\nfunction handleCancel() {\r\n  router.push(`/menu07/board/read?bno=${bno}&pageNo=${pageNo}&hit=false`);\r\n}\r\n\r\nfunction previewImg() {\r\n  if(newBattach.value.files.length != 0) {\r\n    battach.value = URL.createObjectURL(newBattach.value.files[0]);\r\n  }else{\r\n    battach.value = null;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UpdateForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      WriteForm\r\n    </div>\r\n    <div class=\"card-body\">\r\n            <form v-on:submit.prevent=\"handleAdd\">\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">제목</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.btitle\"/>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">내용</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"text\" class=\"form-control\" v-model=\"board.bcontent\"/>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label class=\"col-sm-2 col-form-label\">첨부그림</label>\r\n          <div class=\"col-sm-10\">\r\n            <input type=\"file\" class=\"form-control-file\" ref=\"battach\"/>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"col-sm-12 d-flex justify-content-center\">\r\n            <input type=\"submit\" class=\"btn btn-secondary btn-sm mr-2\" value=\"추가\"/>\r\n            <input type=\"button\" class=\"btn btn-secondary btn-sm\" value=\"취소\" v-on:click=\"handleCancel\"/>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive, ref} from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport apiBoard from \"@/apis/board\";\r\n\r\nconst router = useRouter();\r\n\r\nconst board = reactive({\r\n  btitle: \"\",\r\n  bcontent: \"\"\r\n});\r\n\r\nconst battach = ref(null);\r\n\r\nasync function handleAdd() {\r\n  const multipartFormData = new FormData();\r\n  multipartFormData.append(\"btitle\" , board.btitle);\r\n  multipartFormData.append(\"bcontent\" , board.bcontent);\r\n  multipartFormData.append(\"mid\" , \"user\");\r\n\r\n  //첨부\r\n  if(battach.value.files.length != 0) {\r\n    multipartFormData.append(\"battach\", battach.value.files[0]);\r\n  }\r\n  \r\n  await apiBoard.createBoard(multipartFormData);  //null 또는\r\n  router.push(\"/menu07/board/list\");\r\n\r\n}\r\n\r\nfunction handleCancel() {\r\n  router.push(\"/menu07/board/list\");\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import script from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WriteForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["module","exports","data","filename","mime","bom","blobData","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","async","getBoardList","pageNo","response","console","log","axios","params","result","error","status","apiAuth","createBoard","multipartFormData","dbBoard","state","readBoard","bno","hit","board","downloadBoardAttach","responseType","deleteBoard","updateBoard","class","_createBlock","_Transition","name","_createElementVNode","_ctx","_renderSlot","onClick","inheritAttrs","__exports__","render","ref","loading","handleBtn1","value","work","then","catch","finally","handleBtn2","promise","Promise","resolve","reject","alertDialog","alertDialogMessage","user","reactive","id","password","role","email","handleJoin","store","useStore","useRouter","handleLogin","handleLogout","route","useRoute","router","userId","push","page","query","apiBoard","range","start","end","numbers","i","changePageNo","watch","newUrl","oldUrl","path","battach","getBoard","downloadBattach","fileDownload","battachoname","handleRemove","newBattach","handleUpdate","FormData","append","btitle","bcontent","files","length","handleCancel","previewImg","handleAdd"],"sourceRoot":""}